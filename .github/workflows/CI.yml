name: CI

on: [ push, pull_request ]

jobs:
  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cache-
      - run: choco install innosetup --version 6.2.2
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - uses: ilammy/msvc-dev-cmd@v1 # for nmake
        with:
          arch: x64
      - name: build detours x64
        shell: cmd
        run: |
          cd detours/src
          nmake
      - uses: ilammy/msvc-dev-cmd@v1 # for nmake
        with:
          arch: x86
      - name: build detours x86
        shell: cmd
        run: |
          cd detours/src
          nmake
      - name: build dll x64
        shell: cmd
        run: |
          cmake -S native -B native/build64 -A x64
          cmake --build native/build64 --config Release
      - name: build dll x86
        shell: cmd
        run: |
          cmake -S native -B native/build32 -A Win32
          cmake --build native/build32 --config Release
      - name: build launcher
        run: mvn verify -DskipTests -B
      - name: x64 installer
        shell: bash
        run: ./build-win64.sh
      - name: x86 installer
        shell: bash
        run: ./build-win32.sh
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            HarmonySetup.exe
            HarmonySetup32.exe
          if-no-files-found: error
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cache-
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: build
        run: mvn verify -DskipTests -B
      - name: linux-x64
        run: ./build-linux-x86_64.sh
      - name: linux-aarch64
        run: ./build-linux-aarch64.sh
      - uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/Harmony.jar
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            native-linux-x86_64/Harmony.AppImage
            native-linux-aarch64/Harmony-aarch64.AppImage
          if-no-files-found: error
  macos:
    runs-on: macos-11
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/checkout@v3
      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-cache-
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
      - name: build
        run: mvn verify -DskipTests -B
      - name: clone create-dmg
        run: git clone https://github.com/runelite/create-dmg -b runelite-1.0
      - name: build create-dmg
        run: |
          set -e
          cd create-dmg
          npm install
          ln -s cli.js create-dmg
          chmod +x create-dmg
      - run: echo create-dmg >> $GITHUB_PATH
      - name: macos-x64
        run: ./build-osx-x64.sh --build --dmg
      - name: macos-aarch64
        run: ./build-osx-aarch64.sh --build --dmg
      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            native-osx/Harmony-x64.dmg
            native-osx-aarch64/Harmony-aarch64.dmg
          if-no-files-found: error